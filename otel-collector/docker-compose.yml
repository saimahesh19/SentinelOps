version: '3.8'

services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - monitoring

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - monitoring

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.103.0
    container_name: victoriametrics
    command:
      - '--storageDataPath=/victoria-metrics-data'
      - '--retentionPeriod=1w'
    ports:
      - "8428:8428"
    volumes:
      - victoria-data:/victoria-metrics-data
    networks:
      - monitoring

  vmagent:
    image: victoriametrics/vmagent:v1.103.0
    container_name: vmagent
    command:
      - '--promscrape.config=/etc/vmagent/prometheus.yml'
      - '--remoteWrite.url=http://victoriametrics:8428/api/v1/write'
    volumes:
      - ./prometheus.yml:/etc/vmagent/prometheus.yml
    ports:
      - "8429:8429"
    depends_on:
      - victoriametrics
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      AWS_SHARED_CREDENTIALS_FILE: /etc/grafana/.aws/credentials
      AWS_DEFAULT_REGION: ap-south-1
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - /home/rle2004/grafana-aws:/etc/grafana/.aws:ro
    depends_on:
      - victoriametrics
    networks:
      - monitoring


  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "55681:55681"
      - "8888:8888"
    command: ["--config", "/etc/otel-collector-config.yaml"]
    depends_on:
      - victoriametrics
      - kafka
    networks:
      - monitoring

  telegraf:
    image: telegraf:1.26
    container_name: telegraf
    restart: unless-stopped
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - victoriametrics
    networks:
      - monitoring

volumes:
  kafka-data:
  victoria-data:
  grafana-storage:

networks:
  monitoring:
    driver: bridge
















# version: '3.8'

# services:
  
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.4.0
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - "2181:2181"
#     networks:
#       - monitoring

#   kafka:
#     image: confluentinc/cp-kafka:7.4.0
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     ports:
#       - "9092:9092"
#     volumes:
#       - kafka-data:/var/lib/kafka/data
#     networks:
#       - monitoring

#   victoriametrics:
#     image: victoriametrics/victoria-metrics:v1.103.0
#     container_name: victoriametrics
#     command:
#       - '--storageDataPath=/victoria-metrics-data'
#       - '--retentionPeriod=1w'
#     ports:
#       - "8428:8428"
#     volumes:
#       - victoria-data:/victoria-metrics-data
#     networks:
#       - monitoring

#   vmagent:
#     image: victoriametrics/vmagent:v1.103.0
#     container_name: vmagent
#     command:
#       - '--promscrape.config=/etc/vmagent/prometheus.yml'
#       - '--remoteWrite.url=http://victoriametrics:8428/api/v1/write'
#     volumes:
#       - ./prometheus.yml:/etc/vmagent/prometheus.yml
#     ports:
#       - "8429:8429"
#     depends_on:
#       - victoriametrics
#     networks:
#       - monitoring

#   grafana:
#     image: grafana/grafana:10.4.2
#     container_name: grafana
#     environment:
#       GF_SECURITY_ADMIN_USER: admin
#       GF_SECURITY_ADMIN_PASSWORD: admin
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana-storage:/var/lib/grafana
#     depends_on:
#       - victoriametrics
#     networks:
#       - monitoring

#   loki:
#     image: grafana/loki:2.9.0
#     container_name: loki
#     command: -config.file=/etc/loki/local-config.yaml
#     ports:
#       - "3100:3100"
#     volumes:
#       - ./loki-config.yaml:/etc/loki/local-config.yaml
#     networks:
#       - monitoring

#   # promtail:
#   #   image: grafana/promtail:2.9.0
#   #   container_name: promtail
#   #   volumes:
#   #     - ./promtail-config.yaml:/etc/promtail/promtail.yaml
#   #   command: -config.file=/etc/promtail/promtail.yaml
#   #   depends_on:
#   #     - kafka
#   #     - loki
#   #   networks:
#   #     - monitoring

#   otel-collector:
#     image: otel/opentelemetry-collector:latest
#     container_name: otel-collector
#     volumes:
#       - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
#     ports:
#       - "4317:4317"
#       - "55681:55681"
#       - "8888:8888"
#     command: ["--config", "/etc/otel-collector-config.yaml"]
#     depends_on:
#       - victoriametrics
#       - kafka
#     networks:
#       - monitoring

#   telegraf:
#     image: telegraf:1.26
#     container_name: telegraf
#     restart: unless-stopped
#     volumes:
#       - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
#     depends_on:
#       - victoriametrics
#     networks:
#       - monitoring

# volumes:
#   kafka-data:
#   victoria-data:
#   grafana-storage:

# networks:
#   monitoring:
#     driver: bridge











